<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vinesmario.microservice.server.storage.mapper.StoragePdfSplitedMapper">
  <resultMap id="BaseResultMap" type="com.vinesmario.microservice.server.storage.entity.StoragePdfSplited">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="file_extension" jdbcType="VARCHAR" property="fileExtension" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_absolute_path" jdbcType="VARCHAR" property="fileAbsolutePath" />
    <result column="file_absolute_url" jdbcType="VARCHAR" property="fileAbsoluteUrl" />
    <result column="file_relative_url" jdbcType="VARCHAR" property="fileRelativeUrl" />
    <result column="file_size" jdbcType="BIGINT" property="fileSize" />
    <result column="file_md5_hex" jdbcType="VARCHAR" property="fileMd5Hex" />
    <result column="file_sha1_hex" jdbcType="VARCHAR" property="fileSha1Hex" />
    <result column="origin_id" jdbcType="BIGINT" property="originId" />
    <result column="origin_uuid" jdbcType="VARCHAR" property="originUuid" />
    <result column="pagination" jdbcType="INTEGER" property="pagination" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="last_modified_by" jdbcType="BIGINT" property="lastModifiedBy" />
    <result column="last_modified_date" jdbcType="TIMESTAMP" property="lastModifiedDate" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, tenant_id, uuid, file_extension, file_name, file_absolute_path, file_absolute_url, 
    file_relative_url, file_size, file_md5_hex, file_sha1_hex, origin_id, origin_uuid, 
    pagination, created_by, created_date, last_modified_by, last_modified_date, memo, 
    deleted
  </sql>
  <select id="selectByExample" parameterType="com.vinesmario.microservice.server.common.persistence.mybatis.BaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from storage_pdf_splited
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from storage_pdf_splited
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByUuid" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from storage_pdf_splited
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from storage_pdf_splited
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.vinesmario.microservice.server.common.persistence.mybatis.BaseExample">
    delete from storage_pdf_splited
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.vinesmario.microservice.server.storage.entity.StoragePdfSplited">
    insert into storage_pdf_splited (id, tenant_id, uuid, 
      file_extension, file_name, file_absolute_path, 
      file_absolute_url, file_relative_url, file_size, 
      file_md5_hex, file_sha1_hex, origin_id, 
      origin_uuid, pagination, created_by, 
      created_date, last_modified_by, last_modified_date, 
      memo, deleted)
    values (#{id,jdbcType=BIGINT}, #{tenantId,jdbcType=BIGINT}, #{uuid,jdbcType=VARCHAR}, 
      #{fileExtension,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{fileAbsolutePath,jdbcType=VARCHAR}, 
      #{fileAbsoluteUrl,jdbcType=VARCHAR}, #{fileRelativeUrl,jdbcType=VARCHAR}, #{fileSize,jdbcType=BIGINT}, 
      #{fileMd5Hex,jdbcType=VARCHAR}, #{fileSha1Hex,jdbcType=VARCHAR}, #{originId,jdbcType=BIGINT}, 
      #{originUuid,jdbcType=VARCHAR}, #{pagination,jdbcType=INTEGER}, #{createdBy,jdbcType=BIGINT}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{lastModifiedBy,jdbcType=BIGINT}, #{lastModifiedDate,jdbcType=TIMESTAMP}, 
      #{memo,jdbcType=VARCHAR}, #{deleted,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.vinesmario.microservice.server.storage.entity.StoragePdfSplited">
    insert into storage_pdf_splited
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="fileExtension != null">
        file_extension,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileAbsolutePath != null">
        file_absolute_path,
      </if>
      <if test="fileAbsoluteUrl != null">
        file_absolute_url,
      </if>
      <if test="fileRelativeUrl != null">
        file_relative_url,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="fileMd5Hex != null">
        file_md5_hex,
      </if>
      <if test="fileSha1Hex != null">
        file_sha1_hex,
      </if>
      <if test="originId != null">
        origin_id,
      </if>
      <if test="originUuid != null">
        origin_uuid,
      </if>
      <if test="pagination != null">
        pagination,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="lastModifiedBy != null">
        last_modified_by,
      </if>
      <if test="lastModifiedDate != null">
        last_modified_date,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="fileExtension != null">
        #{fileExtension,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileAbsolutePath != null">
        #{fileAbsolutePath,jdbcType=VARCHAR},
      </if>
      <if test="fileAbsoluteUrl != null">
        #{fileAbsoluteUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileRelativeUrl != null">
        #{fileRelativeUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="fileMd5Hex != null">
        #{fileMd5Hex,jdbcType=VARCHAR},
      </if>
      <if test="fileSha1Hex != null">
        #{fileSha1Hex,jdbcType=VARCHAR},
      </if>
      <if test="originId != null">
        #{originId,jdbcType=BIGINT},
      </if>
      <if test="originUuid != null">
        #{originUuid,jdbcType=VARCHAR},
      </if>
      <if test="pagination != null">
        #{pagination,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedBy != null">
        #{lastModifiedBy,jdbcType=BIGINT},
      </if>
      <if test="lastModifiedDate != null">
        #{lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vinesmario.microservice.server.common.persistence.mybatis.BaseExample" resultType="java.lang.Integer">
    select count(*) from storage_pdf_splited
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update storage_pdf_splited
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=BIGINT},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.fileExtension != null">
        file_extension = #{record.fileExtension,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileAbsolutePath != null">
        file_absolute_path = #{record.fileAbsolutePath,jdbcType=VARCHAR},
      </if>
      <if test="record.fileAbsoluteUrl != null">
        file_absolute_url = #{record.fileAbsoluteUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.fileRelativeUrl != null">
        file_relative_url = #{record.fileRelativeUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSize != null">
        file_size = #{record.fileSize,jdbcType=BIGINT},
      </if>
      <if test="record.fileMd5Hex != null">
        file_md5_hex = #{record.fileMd5Hex,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSha1Hex != null">
        file_sha1_hex = #{record.fileSha1Hex,jdbcType=VARCHAR},
      </if>
      <if test="record.originId != null">
        origin_id = #{record.originId,jdbcType=BIGINT},
      </if>
      <if test="record.originUuid != null">
        origin_uuid = #{record.originUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.pagination != null">
        pagination = #{record.pagination,jdbcType=INTEGER},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.createdDate != null">
        created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifiedBy != null">
        last_modified_by = #{record.lastModifiedBy,jdbcType=BIGINT},
      </if>
      <if test="record.lastModifiedDate != null">
        last_modified_date = #{record.lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update storage_pdf_splited
    set id = #{record.id,jdbcType=BIGINT},
      tenant_id = #{record.tenantId,jdbcType=BIGINT},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      file_extension = #{record.fileExtension,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_absolute_path = #{record.fileAbsolutePath,jdbcType=VARCHAR},
      file_absolute_url = #{record.fileAbsoluteUrl,jdbcType=VARCHAR},
      file_relative_url = #{record.fileRelativeUrl,jdbcType=VARCHAR},
      file_size = #{record.fileSize,jdbcType=BIGINT},
      file_md5_hex = #{record.fileMd5Hex,jdbcType=VARCHAR},
      file_sha1_hex = #{record.fileSha1Hex,jdbcType=VARCHAR},
      origin_id = #{record.originId,jdbcType=BIGINT},
      origin_uuid = #{record.originUuid,jdbcType=VARCHAR},
      pagination = #{record.pagination,jdbcType=INTEGER},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      last_modified_by = #{record.lastModifiedBy,jdbcType=BIGINT},
      last_modified_date = #{record.lastModifiedDate,jdbcType=TIMESTAMP},
      memo = #{record.memo,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vinesmario.microservice.server.storage.entity.StoragePdfSplited">
    update storage_pdf_splited
    <set>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="fileExtension != null">
        file_extension = #{fileExtension,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileAbsolutePath != null">
        file_absolute_path = #{fileAbsolutePath,jdbcType=VARCHAR},
      </if>
      <if test="fileAbsoluteUrl != null">
        file_absolute_url = #{fileAbsoluteUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileRelativeUrl != null">
        file_relative_url = #{fileRelativeUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="fileMd5Hex != null">
        file_md5_hex = #{fileMd5Hex,jdbcType=VARCHAR},
      </if>
      <if test="fileSha1Hex != null">
        file_sha1_hex = #{fileSha1Hex,jdbcType=VARCHAR},
      </if>
      <if test="originId != null">
        origin_id = #{originId,jdbcType=BIGINT},
      </if>
      <if test="originUuid != null">
        origin_uuid = #{originUuid,jdbcType=VARCHAR},
      </if>
      <if test="pagination != null">
        pagination = #{pagination,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedBy != null">
        last_modified_by = #{lastModifiedBy,jdbcType=BIGINT},
      </if>
      <if test="lastModifiedDate != null">
        last_modified_date = #{lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vinesmario.microservice.server.storage.entity.StoragePdfSplited">
    update storage_pdf_splited
    set tenant_id = #{tenantId,jdbcType=BIGINT},
      uuid = #{uuid,jdbcType=VARCHAR},
      file_extension = #{fileExtension,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_absolute_path = #{fileAbsolutePath,jdbcType=VARCHAR},
      file_absolute_url = #{fileAbsoluteUrl,jdbcType=VARCHAR},
      file_relative_url = #{fileRelativeUrl,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=BIGINT},
      file_md5_hex = #{fileMd5Hex,jdbcType=VARCHAR},
      file_sha1_hex = #{fileSha1Hex,jdbcType=VARCHAR},
      origin_id = #{originId,jdbcType=BIGINT},
      origin_uuid = #{originUuid,jdbcType=VARCHAR},
      pagination = #{pagination,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=BIGINT},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      last_modified_by = #{lastModifiedBy,jdbcType=BIGINT},
      last_modified_date = #{lastModifiedDate,jdbcType=TIMESTAMP},
      memo = #{memo,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>